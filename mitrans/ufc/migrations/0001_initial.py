# Generated by Django 5.1.2 on 2025-04-27 00:11

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('nomencladores', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='registro_vagones_cargados',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no_id', models.CharField(blank=True, help_text="Valores definidos en el nomenclador de equipos ferroviarios (excepto 'Locomotora')", max_length=50, null=True, unique=True, verbose_name='Número de identificación')),
                ('fecha_despacho', models.DateField(blank=True, null=True, verbose_name='Fecha de despacho')),
                ('tipo_origen', models.CharField(blank=True, choices=[('puerto', 'Puerto'), ('ac_ccd', 'Acceso comercial/CCD')], max_length=50, null=True)),
                ('origen', models.CharField(blank=True, max_length=40, null=True)),
                ('fecha_llegada', models.DateField(blank=True, null=True, verbose_name='Fecha de llegada')),
                ('observaciones', models.TextField(blank=True, help_text='Admite letras, números y caracteres especiales', null=True, verbose_name='Observaciones')),
            ],
            options={
                'verbose_name': 'Registro de vagón cargado',
                'verbose_name_plural': 'Registros de vagones cargados',
            },
        ),
        migrations.CreateModel(
            name='producto_UFC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.IntegerField()),
                ('estado', models.CharField(blank=True, choices=[('vacio', 'Vacío'), ('lleno', 'Lleno')], max_length=20, null=True)),
                ('contiene', models.CharField(blank=True, choices=[('alimentos', 'Alimentos'), ('prod_varios', 'Productos Varios')], max_length=20, null=True)),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nomencladores.nom_producto')),
                ('tipo_embalaje', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nomencladores.nom_tipo_embalaje')),
                ('unidad_medida', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nomencladores.nom_unidad_medida')),
            ],
            options={
                'verbose_name': 'Producto UFC',
                'verbose_name_plural': 'Productos en UFC',
            },
        ),
        migrations.CreateModel(
            name='por_situar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_origen', models.CharField(choices=[('puerto', 'Puerto'), ('ac_ccd', 'Acceso Comercial')], max_length=100, verbose_name='Tipo de origen')),
                ('origen', models.CharField(max_length=200, verbose_name='Origen')),
                ('tipo_equipo', models.CharField(choices=[('casilla', 'Casilla'), ('caj_gon', 'Cajones o Góndola'), ('planc_plat', 'Plancha o Plataforma'), ('Plan_porta_cont', 'Plancha porta contenedores'), ('cist_liquidos', 'Cisterna para líquidos'), ('cist_solidos', 'Cisterna para sólidos'), ('tolva_g_mineral', 'Tolva granelera(mineral)'), ('tolva_g_agric', 'Tolva granelera(agrícola)'), ('tolva_g_cemento', 'Tolva para cemento'), ('volqueta', 'Volqueta'), ('Vagon_ref', 'Vagón refrigerado'), ('jaula', 'Jaula'), ('locomotora', 'Locomotora'), ('tren', 'Tren')], max_length=200, verbose_name='Tipo de equipo')),
                ('estado', models.CharField(choices=[('vacio', 'Vacio'), ('cargado', 'Cargado')], max_length=200, verbose_name='Estado')),
                ('operacion', models.CharField(choices=[('carga', 'Carga'), ('descarga', 'Descarga')], max_length=200, verbose_name='Operacion')),
                ('por_situar', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(code='numero_invalido', message='Solo se permiten números enteros (ej: 5, -10).', regex='^-?\\d+$')], verbose_name='Por situar')),
                ('observaciones', models.TextField(blank=True, help_text='Ingrese observaciones adicionales. Admite letras, números y caracteres especiales.', null=True, verbose_name='Observaciones')),
                ('producto', models.ManyToManyField(blank=True, related_name='por_situar', to='ufc.producto_ufc', verbose_name='Productos')),
            ],
            options={
                'verbose_name': 'Por situar',
                'verbose_name_plural': 'Por situar',
                'ordering': ['tipo_origen', 'origen'],
            },
        ),
        migrations.CreateModel(
            name='en_trenes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_identificacion_locomotora', models.CharField(blank=True, max_length=10, null=True, verbose_name='Número de identificación de la locomotora')),
                ('estado', models.CharField(choices=[('vacio', 'Vacío'), ('cargado', 'Cargado')], default='', max_length=50)),
                ('tipo_origen', models.CharField(choices=[('puerto', 'Puerto'), ('ac_ccd', 'Acceso comercial/CCD')], default='', max_length=50)),
                ('origen', models.CharField(default='', max_length=40)),
                ('tipo_destino', models.CharField(choices=[('puerto', 'Puerto'), ('ac_ccd', 'Acceso comercial/CCD')], default='', max_length=50)),
                ('destino', models.CharField(default='', max_length=40)),
                ('cantidad_vagones', models.IntegerField(default=1, verbose_name='Cantidad de vagones')),
                ('observaciones', models.TextField(blank=True, help_text='Ingrese observaciones adicionales. Admite letras, números y caracteres especiales.', null=True, verbose_name='Observaciones')),
                ('equipo_vagon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nomencladores.nom_equipo_ferroviario')),
                ('locomotora', models.ForeignKey(help_text='Seleccione una locomotora.', on_delete=django.db.models.deletion.CASCADE, related_name='trenes_locomotora', to='nomencladores.nom_equipo_ferroviario', verbose_name='Locomotora asignada')),
                ('tipo_equipo', models.ForeignKey(default='', max_length=50, on_delete=django.db.models.deletion.CASCADE, to='nomencladores.nom_tipo_equipo_ferroviario')),
                ('producto', models.ManyToManyField(blank=True, related_name='en_trenes', to='ufc.producto_ufc', verbose_name='Productos')),
            ],
            options={
                'verbose_name': 'Tren',
                'verbose_name_plural': 'Trenes',
            },
        ),
        migrations.CreateModel(
            name='arrastres',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_origen', models.CharField(choices=[('puerto', 'Puerto'), ('ac_ccd', ' comercial/AccesoCCD')], default='', max_length=50, verbose_name='Tipo de origen')),
                ('origen', models.CharField(default='', max_length=40, verbose_name='Origen')),
                ('tipo_equipo', models.CharField(blank=True, choices=[('casilla', 'Casilla'), ('caj_gon', 'Cajones o Góndola'), ('planc_plat', 'Plancha o Plataforma'), ('Plan_porta_cont', 'Plancha porta contenedores'), ('cist_liquidos', 'Cisterna para líquidos'), ('cist_solidos', 'Cisterna para sólidos'), ('tolva_g_mineral', 'Tolva granelera(mineral)'), ('tolva_g_agric', 'Tolva granelera(agrícola)'), ('tolva_g_cemento', 'Tolva para cemento'), ('volqueta', 'Volqueta'), ('Vagon_ref', 'Vagón refrigerado'), ('jaula', 'Jaula'), ('locomotora', 'Locomotora'), ('tren', 'Tren')], max_length=200, null=True, verbose_name='Tipo de equipo')),
                ('estado', models.CharField(blank=True, choices=[('vacio', 'Vacio'), ('cargado', 'Cargado')], max_length=200, null=True, verbose_name='Estado')),
                ('cantidad_vagones', models.CharField(max_length=10, verbose_name='Cantidad de vagones')),
                ('tipo_destino', models.CharField(choices=[('puerto', 'Puerto'), ('ac_ccd', ' comercial/AccesoCCD')], default='', max_length=50, verbose_name='Tipo de destino')),
                ('destino', models.CharField(default='', max_length=40, verbose_name='Destino')),
                ('producto', models.ManyToManyField(blank=True, related_name='arrastres', to='ufc.producto_ufc', verbose_name='Productos')),
            ],
            options={
                'verbose_name': 'arrastre',
                'verbose_name_plural': 'Arrastres',
            },
        ),
        migrations.CreateModel(
            name='Situado_Carga_Descarga',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_origen', models.CharField(blank=True, choices=[('puerto', 'Puerto'), ('ac_ccd', 'Acceso Comercial')], max_length=100, null=True, verbose_name='Tipo de origen')),
                ('origen', models.CharField(max_length=200, verbose_name='Origen')),
                ('tipo_equipo', models.CharField(blank=True, choices=[('casilla', 'Casilla'), ('caj_gon', 'Cajones o Góndola'), ('planc_plat', 'Plancha o Plataforma'), ('Plan_porta_cont', 'Plancha porta contenedores'), ('cist_liquidos', 'Cisterna para líquidos'), ('cist_solidos', 'Cisterna para sólidos'), ('tolva_g_mineral', 'Tolva granelera(mineral)'), ('tolva_g_agric', 'Tolva granelera(agrícola)'), ('tolva_g_cemento', 'Tolva para cemento'), ('volqueta', 'Volqueta'), ('Vagon_ref', 'Vagón refrigerado'), ('jaula', 'Jaula'), ('locomotora', 'Locomotora'), ('tren', 'Tren')], max_length=200, null=True, verbose_name='Tipo de equipo')),
                ('estado', models.CharField(blank=True, choices=[('vacio', 'Vacio'), ('cargado', 'Cargado')], max_length=200, null=True, verbose_name='Estado')),
                ('operacion', models.CharField(blank=True, choices=[('carga', 'Carga'), ('descarga', 'Descarga')], max_length=200, null=True, verbose_name='Operacion')),
                ('situados', models.CharField(default='0', max_length=10, validators=[django.core.validators.RegexValidator(code='invalid_situados', message='Solo se permiten números positivos', regex='^[0-9]+$')], verbose_name='Cantidad de situados')),
                ('pendiente_proximo_dia', models.CharField(default='0', max_length=10, validators=[django.core.validators.RegexValidator(code='invalid_pendientes', message='Solo se permiten números positivos', regex='^[0-9]+$')], verbose_name='Pendientes para el próximo día')),
                ('observaciones', models.TextField(blank=True, help_text='Ingrese observaciones adicionales. Admite letras, números y caracteres especiales.', null=True, verbose_name='Observaciones')),
                ('producto', models.ManyToManyField(blank=True, related_name='situados', to='ufc.producto_ufc', verbose_name='Productos')),
            ],
        ),
        migrations.CreateModel(
            name='vagon_cargado_descargado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_origen', models.CharField(choices=[('puerto', 'Puerto'), ('ac_ccd', 'Acceso comercial/CCD')], max_length=50)),
                ('origen', models.CharField(max_length=40)),
                ('estado', models.CharField(choices=[('vacio', 'Vacío'), ('cargado', 'Cargado')], max_length=50)),
                ('operacion', models.CharField(choices=[('carga', 'Carga'), ('descarga', 'Descarga')], max_length=50)),
                ('plan_diario_carga_descarga', models.IntegerField()),
                ('real_carga_descarga', models.IntegerField(default=0, editable=False)),
                ('tipo_destino', models.CharField(choices=[('puerto', 'Puerto'), ('ac_ccd', 'Acceso comercial/CCD')], max_length=50)),
                ('destino', models.CharField(max_length=40)),
                ('causas_incumplimiento', models.TextField(blank=True, max_length=100, null=True)),
                ('producto', models.ManyToManyField(blank=True, related_name='vagones_cargados', to='ufc.producto_ufc')),
                ('registros_vagones', models.ManyToManyField(blank=True, related_name='vagon_principal', to='ufc.registro_vagones_cargados', verbose_name='Registros de vagones asociados')),
                ('tipo_equipo_ferroviario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nomencladores.nom_tipo_equipo_ferroviario')),
            ],
            options={
                'verbose_name': 'Vagón cargado/descargado',
                'verbose_name_plural': 'Vagones cargados/descargados',
            },
        ),
        migrations.CreateModel(
            name='vagones_productos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_origen', models.CharField(choices=[('puerto', 'Puerto'), ('ac_ccd', 'Acceso comercial/CCD')], max_length=50)),
                ('origen', models.CharField(max_length=40)),
                ('tipo_producto', models.CharField(blank=True, choices=[('producto', 'Producto'), ('contenedor', 'Contenedor')], max_length=20, null=True)),
                ('tipo_combustible', models.CharField(blank=True, choices=[('combustible_blanco', 'Combustible blanco'), ('combustible_negro', 'Combustible negro'), ('combustible_turbo', 'Combustible turbo')], max_length=20, null=True)),
                ('plan_mensual', models.IntegerField()),
                ('plan_dia', models.IntegerField(default=0, editable=False)),
                ('vagones_situados', models.IntegerField(default=0, editable=False)),
                ('vagones_cargados', models.IntegerField(default=0, editable=False)),
                ('plan_aseguramiento_proximos_dias', models.IntegerField(default=0, editable=False)),
                ('observaciones', models.TextField(blank=True, help_text='Admite letras, números y caracteres especiales', null=True, verbose_name='Observaciones')),
                ('plan_anual', models.IntegerField()),
                ('plan_acumulado_dia_anterior', models.IntegerField()),
                ('real_acumulado_dia_anterior', models.IntegerField()),
                ('producto', models.ManyToManyField(blank=True, related_name='vagones_productos', to='ufc.producto_ufc')),
                ('tipo_equipo_ferroviario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nomencladores.nom_tipo_equipo_ferroviario')),
            ],
            options={
                'verbose_name': 'Vagón y producto',
                'verbose_name_plural': 'Vagones y productos',
            },
        ),
    ]
