# Generated by Django 5.1.2 on 2025-04-27 00:11

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='nom_cargo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_cargo', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^[A-Z][\\w ]{2,18}$', 'Este campo comienza con letra mayúscula seguida de hasta 19 caracteres alfabéticos y espacios.')], verbose_name='Cargo')),
            ],
            options={
                'verbose_name': 'Cargos',
                'verbose_name_plural': 'Cargos',
            },
        ),
        migrations.CreateModel(
            name='nom_contenedor',
            fields=[
                ('id_contenedor', models.CharField(max_length=11, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.RegexValidator('^[A-Z]{4}[0-9]{7}$', 'Este campo comienza con cuatro letras mayúsculas seguidas de siete dígitos.')], verbose_name='Id del contenedor')),
                ('tipo_contenedor', models.CharField(choices=[('DC', 'Dry Container'), ('RC', 'Reefer Container'), ('GP', 'GP'), ('HC', 'High Cube'), ('OT', 'Open Top'), ('FR', 'Flat Rack'), ('RH', 'RH'), ('OS', 'Open Side'), ('TC', 'Tank Container')], default='DC', help_text='Escoja una opción.', max_length=25, verbose_name='Tipo de contenedor')),
                ('longitud', models.CharField(choices=[('1-20', '1-20'), ('2-40', '2-40')], default='1-20', help_text='Escoja una opción.', max_length=4, verbose_name='Longitud')),
                ('codigo_iso', models.CharField(max_length=4, validators=[django.core.validators.RegexValidator('^[0-9]{2}[A-Z]{1}[0-9]{1}$', 'Este campo comienza con dos números, seguidos de una letra mayúscula y un número.')], verbose_name='Código ISO')),
            ],
            options={
                'verbose_name': 'Contenedor',
                'verbose_name_plural': 'Contenedores',
            },
        ),
        migrations.CreateModel(
            name='nom_estado_tecnico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_estado_tecnico', models.CharField(max_length=5, unique=True, validators=[django.core.validators.RegexValidator('^[A-Za-zÁÉÍÓÚáéíóú\\s]{2,5}$', 'Este campo acepta letras. Tamaño mínimo 2 caracteres y tamaño máximo 5 caracteres. ')], verbose_name='Código del estado técnico')),
                ('nombre_estado_tecnico', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[\\w\\d\\W ]{3,100}$', 'Este campo acepta letras, números y caracteres especiales. Tamaño mínimo 3 caracteres y tamaño máximo 100 caracteres.')], verbose_name='Nombre')),
            ],
            options={
                'verbose_name': 'Estado técnico',
                'verbose_name_plural': 'Estados técnicos',
            },
        ),
        migrations.CreateModel(
            name='nom_incidencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_incidencia', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^[\\w\\d\\W ]{2,5}$', 'Este campo acepta letras, números y caracteres especiales. Tamaño mínimo 2 caracteres y tamaño máximo 5 caracteres.')], verbose_name='Código de incidencia')),
                ('nombre_incidencia', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator('^[\\w\\d\\W ]{3,100}$', 'Este campo acepta letras, números y caracteres especiales. Tamaño mínimo 3 caracteres y tamaño máximo 100 caracteres.')], verbose_name='Nombre')),
                ('tipo_imputable', models.CharField(choices=[('-', '-'), ('imputables_buque', 'Imputables al buque'), ('imputables_puerto', 'Imputables al puerto'), ('imputables_receptor', 'Imputables al receptor'), ('imputables_otras_causas', 'Imputables a otras causas'), ('imputables_imp_exp', 'Imputables al importador / exportador'), ('imputables_aut_portuarias', 'Imputables a las autoridades portuarias')], default='-', help_text='Escoja una opción.', max_length=40, verbose_name='Tipo imputable')),
            ],
            options={
                'verbose_name': 'Incidencia',
                'verbose_name_plural': 'Incidencias',
            },
        ),
        migrations.CreateModel(
            name='nom_producto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_producto', models.CharField(blank=True, max_length=20, null=True, unique=True, validators=[django.core.validators.RegexValidator('^[\\w\\d\\W ]{3,20}$', 'Este campo acepta letras, números y caracteres especiales. Tamaño mínimo 3 caracteres y tamaño máximo 20 caracteres.')], verbose_name='Código del producto')),
                ('nombre_producto', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator('^[\\w\\d\\W ]{3,100}$', 'Este campo acepta letras, números y caracteres especiales. Tamaño mínimo 3 caracteres y tamaño máximo 100 caracteres.')], verbose_name='Nombre')),
                ('tipo_producto', models.CharField(choices=[('-', '-'), ('alimento', 'Alimento'), ('combustible', 'Combustible'), ('otros', 'Otros')], default='-', max_length=20, verbose_name='Tipo de producto')),
                ('descripcion', models.TextField(validators=[django.core.validators.RegexValidator('^[A-Z][\\w\\d\\W]{2,399}$', 'Este campo comienza con mayúscula, acepta letras, números y caracteres especiales. Tamaño mínimo 2 caracteres y tamaño máximo 399 caracteres.')], verbose_name='Descripción')),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
            },
        ),
        migrations.CreateModel(
            name='nom_tipo_embalaje',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_tipo_embalaje', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator('^[A-Z][\\w\\s]{1,99}$', 'Este campo comienza con mayúscula, acepta letras minúsculas y espacios. Tamaño mínimo 2 caracteres y tamaño máximo 100 caracteres.')], verbose_name='Nombre del embalaje')),
            ],
            options={
                'verbose_name': 'Tipo de embalaje',
                'verbose_name_plural': 'Tipos de embalaje',
            },
        ),
        migrations.CreateModel(
            name='nom_tipo_estructura_ubicacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_tipo_estructura_ubicacion', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator('^[A-Z][\\w\\s]{1,99}$', 'Este campo comienza con mayúscula. admite letras minúsculas y espacio. Tamaño mínimo 5 caracteres y tamaño máximo 11 caracteres.')], verbose_name='Ubicación')),
            ],
            options={
                'verbose_name': 'Tipo de estructura de ubicación',
                'verbose_name_plural': 'Tipos de estructura de ubicación',
            },
        ),
        migrations.CreateModel(
            name='nom_unidad_medida',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('magnitud', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[A-Záíóúé\\w\\s]{1,49}$', 'Este campo admite letras y espacios. Tamaño mínimo 3 caracteres y tamaño máximo 50 caracteres.')], verbose_name='Magnitud física')),
                ('unidad_medida', models.CharField(max_length=50, unique=True, validators=[django.core.validators.RegexValidator('^[A-Záíóúé\\w\\s]{1,49}$', 'Este campo admite letras y espacios. Tamaño mínimo 3 caracteres y tamaño máximo 50 caracteres.')], verbose_name='Unidad de medida')),
                ('simbolo', models.CharField(max_length=3, unique=True, validators=[django.core.validators.RegexValidator('^[\\d\\w]{1,3}$', 'Este campo admite caracteres alfanuméricos. Tamaño mínimo 1 y máximo 3 caracteres.')], verbose_name='Símbolo')),
            ],
            options={
                'verbose_name': 'Unidad de medida',
                'verbose_name_plural': 'Unidades de medida',
            },
        ),
        migrations.CreateModel(
            name='nom_osde_oace_organismo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, unique=True, validators=[django.core.validators.RegexValidator('^[A-Z][\\w\\d\\W]{2,99}$', 'Este campo comienza con mayúscula, acepta letras, números y caracteres especiales. Tamaño mínimo 3 caracteres y tamaño máximo 100 caracteres.')], verbose_name='Nombre')),
                ('abreviatura', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^[A-ZÁÉÍÓÚ]{1}[A-Za-zÁÉÍÓÚáéíóú\\s]{2,19}', 'Este campo comienza con mayúscula seguido de espacio o caracteres alfabéticos. Tamaño mínimo 3 caracteres y tamaño máximo 20 caracteres.')], verbose_name='Abreviatura')),
                ('codigo_reeup', models.BigIntegerField(blank=True, null=True, validators=[django.core.validators.RegexValidator('^[0-9]{5,11}$', 'Este campo sólo admite números. Tamaño mínimo 5 caracteres y tamaño máximo 11 caracteres.')], verbose_name='Código REEUP')),
            ],
            options={
                'verbose_name': 'Osde/OACE/Organismo',
                'verbose_name_plural': 'Osde/OACE/Organismos',
                'unique_together': {('nombre', 'abreviatura', 'codigo_reeup')},
            },
        ),
        migrations.CreateModel(
            name='nom_pais',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nacionalidad', models.CharField(max_length=3, unique=True, validators=[django.core.validators.RegexValidator('^[A-Z]{3}$', 'Este campo sólo acepta tres letras mayúsculas')])),
                ('nombre_pais', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator('^[A-Z]{1}[a-záíóúé ]{2,99}$', 'Este campo comienza con mayúscula seguido de espacio, caracteres alfabéticos y no puede exceder los 100 caracteres.')])),
            ],
            options={
                'verbose_name': 'País',
                'verbose_name_plural': 'Países',
                'ordering': ['nombre_pais'],
                'unique_together': {('nacionalidad', 'nombre_pais')},
            },
        ),
        migrations.CreateModel(
            name='nom_embarcacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_embarcacion', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator('^[A-Z]{1}[A-Za-z ]{3,100}$', 'Este campo comienza con mayúscula seguido de letras. Tamaño mínimo 3 caracteres y tamaño máximo 100 caracteres.')])),
                ('eslora', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Eslora')),
                ('manga', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Manga')),
                ('calado_maximo', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Calado máximo')),
                ('desplazamiento_maximo', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Desplazamiento máximo')),
                ('tipo_embarcacion', models.CharField(choices=[('-', '-'), ('buque', 'Buque'), ('remolcador', 'Remolcador'), ('patana', 'Patana'), ('otros', 'Otros')], default='-', help_text='Escoja una opción.', max_length=20, verbose_name='Tipo de embarcación')),
                ('tipo_buque', models.CharField(blank=True, choices=[('buque_carga_gral', 'Buque de carga general'), ('buque_granelero', 'Buque granelero'), ('buque_ro_ro', 'Buque Ro Ro'), ('buque_frig', 'Buque frigorífico'), ('buque_tanque', 'Buque tanque'), ('buque_gases', 'Buque de gases'), ('-', '-')], default='-', help_text='Escoja una opción.', max_length=30, null=True, verbose_name='Tipo de buque')),
                ('tipo_patana', models.CharField(blank=True, choices=[('pat_carga_seca', 'Patana de carga seca'), ('pat_carga_liquida', 'Patana de carga líquida'), ('patana_comb', 'Patana de combustible'), ('patana_ro_ro', 'Patana Ro Ro'), ('-', '-')], default='-', help_text='Escoja una opción.', max_length=30, null=True, verbose_name='Tipo de patana')),
                ('imo', models.CharField(blank=True, max_length=10, null=True, unique=True, verbose_name='IMO')),
                ('potencia', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Potencia')),
                ('nacionalidad', models.ForeignKey(help_text='Escoja una opción.', on_delete=django.db.models.deletion.CASCADE, to='nomencladores.nom_pais')),
            ],
            options={
                'verbose_name': 'Embarcación',
                'verbose_name_plural': 'Embarcaciones',
            },
        ),
        migrations.CreateModel(
            name='nom_provincia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=2, unique=True, validators=[django.core.validators.RegexValidator('^[0-9]{2}$', 'Este campo sólo admite dos números.')], verbose_name='Código')),
                ('nombre_provincia', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator('^[A-Z][a-zA-ZáéíóúÁÉÍÓÚñÑäëöüÄËÏÜ ]{2,99}$', 'Este campo comienza con mayúscula seguido de espacio, caracteres alfabéticos y no puede exceder los 100 caracteres.')], verbose_name='Nombre de la provincia')),
                ('pais', models.ForeignKey(help_text='Escoja una opción', on_delete=django.db.models.deletion.CASCADE, to='nomencladores.nom_pais', verbose_name='País')),
            ],
            options={
                'verbose_name': 'Provincias',
                'verbose_name_plural': 'Provincias',
                'ordering': ['nombre_provincia'],
            },
        ),
        migrations.CreateModel(
            name='nom_municipio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_municipio', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator('^[A-Z][\\w\\d\\W]{2,99}$', 'ESte campo acepta letras comenzalndo con mayúscula. Tamaño mínimo 3 caracteres y tamaño máximo 100 caracteres.')], verbose_name='Nombre del municipio')),
                ('codigo', models.CharField(max_length=4, unique=True, validators=[django.core.validators.RegexValidator('[0-9]{4}$', 'Este campo admite hasta cuatro dígitos.')], verbose_name='Código')),
                ('provincia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nomencladores.nom_provincia', verbose_name='Provincia')),
            ],
            options={
                'verbose_name': 'Municipios',
                'verbose_name_plural': 'Municipios',
                'ordering': ['nombre_municipio'],
            },
        ),
        migrations.CreateModel(
            name='nom_puerto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_puerto', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator('^[A-Z][a-zA-ZáéíóúÁÉÍÓÚñÑäëöüÄËÏÜ ]{2,99}$', 'Este campo comienza con mayúscula Letras seguido de estacios y letras. Tamaño mínimo 3 caracteres y tamaño máximo 100 caracteres.')], verbose_name='Nombre del puerto')),
                ('latitud', models.CharField(max_length=50, verbose_name='Latitud')),
                ('longitud', models.CharField(max_length=50, verbose_name='Longitud')),
                ('pais', models.ForeignKey(help_text='Escoja una opción.', on_delete=django.db.models.deletion.CASCADE, to='nomencladores.nom_pais', verbose_name='País')),
                ('provincia', models.ForeignKey(blank=True, help_text='Escoja una opción.', null=True, on_delete=django.db.models.deletion.CASCADE, to='nomencladores.nom_provincia', verbose_name='Provincia')),
            ],
            options={
                'verbose_name': 'Puerto',
                'verbose_name_plural': 'Puertos',
            },
        ),
        migrations.CreateModel(
            name='nom_terminal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_terminal', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator('^[A-Z][a-zA-ZáéíóúÁÉÍÓÚñÑäëöüÄËÏÜ ]{2,99}$', 'Este campo comienza con mayuscula, seguido de letras y espacios. Tamaño mínimo 3 caracteres y tamaño máximo 100 caracteres.')], verbose_name='Nombre')),
                ('capacidad_almacen_importacion', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Capacidad de almacén importación')),
                ('capacidad_almacen_exportacion', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Capacidad de almacén exportación')),
                ('puerto', models.ForeignKey(help_text='Escoja una opción.', on_delete=django.db.models.deletion.CASCADE, to='nomencladores.nom_puerto')),
            ],
            options={
                'verbose_name': 'Terminal',
                'verbose_name_plural': 'Terminales',
                'unique_together': {('nombre_terminal', 'puerto')},
            },
        ),
        migrations.CreateModel(
            name='nom_territorio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_territorio', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator('^[A-Z]{1}[a-záíóúé ]{2,99}$', 'Este campo comienza con mayúscula seguido de espacio, caracteres alfabéticos y no puede exceder los 100 caracteres.')])),
                ('abreviatura', models.CharField(max_length=3, unique=True, validators=[django.core.validators.RegexValidator('^[A-Z]{3}$', 'Este campo sólo acepta tres letras mayúsculas.')])),
            ],
            options={
                'verbose_name': 'Territorio',
                'verbose_name_plural': 'Territorios',
                'ordering': ['nombre_territorio'],
                'unique_together': {('nombre_territorio', 'abreviatura')},
            },
        ),
        migrations.AddField(
            model_name='nom_puerto',
            name='servicio_portuario',
            field=models.ForeignKey(blank=True, help_text='Escoja una opción.', null=True, on_delete=django.db.models.deletion.CASCADE, to='nomencladores.nom_territorio', verbose_name='Servicio portuario'),
        ),
        migrations.CreateModel(
            name='nom_entidades',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator('^[A-Z][A-Za-zÁÉÍÓÚáéíóú ]{2,99}', 'Este campo comienza con mayúscula, acepta letras y espacios. Tamaño mínimo 2 caracteres y tamaño máximo 100 caracteres.')], verbose_name='Nombre')),
                ('abreviatura', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^[A-ZÁÉÍÓÚ]{1}[A-Za-zÁÉÍÓÚáéíóú\\s]{2,19}$', 'Este campo comienza con mayúscula seguido de espacio o caracteres alfabéticos. Tamaño mínimo 3 caracteres y tamaño máximo 100 caracteres.')], verbose_name='Abreviatura')),
                ('codigo_reeup', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator('^[0-9]{5,11}$', 'Este campo sólo admite números. Tamaño mínimo 5 caracteres y tamaño máximo 11 caracteres.')], verbose_name='Código REEUP')),
                ('tipo_entidad', models.CharField(choices=[('importador', 'Importador'), ('exportador', 'Exportador'), ('transportista', 'Transportista'), ('acceso_comercial', 'Acceso comercial'), ('compania_naviera', 'Compañía naviera'), ('mitrans', 'Mitrans'), ('otros', 'Otros')], default='DC', help_text='Escoja una opción.', max_length=30, verbose_name='Tipo de entidad')),
                ('osde_oace_organismo', models.ForeignKey(blank=True, help_text='Escoja una opción.', null=True, on_delete=django.db.models.deletion.CASCADE, to='nomencladores.nom_osde_oace_organismo', verbose_name=' OSDE/OACE u organismo ')),
                ('provincia', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nomencladores.nom_provincia')),
                ('territorio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nomencladores.nom_territorio')),
            ],
            options={
                'verbose_name': 'Entidad',
                'verbose_name_plural': 'Entidades',
            },
        ),
        migrations.CreateModel(
            name='nom_tipo_equipo_ferroviario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_equipo', models.CharField(choices=[('casilla', 'Casilla'), ('caj_gon', 'Cajones o Góndola'), ('planc_plat', 'Plancha o Plataforma'), ('Plan_porta_cont', 'Plancha porta contenedores'), ('cist_liquidos', 'Cisterna para líquidos'), ('cist_solidos', 'Cisterna para sólidos'), ('tolva_g_mineral', 'Tolva granelera(mineral)'), ('tolva_g_agric', 'Tolva granelera(agrícola)'), ('tolva_g_cemento', 'Tolva para cemento'), ('volqueta', 'Volqueta'), ('Vagon_ref', 'Vagón refrigerado'), ('jaula', 'Jaula'), ('locomotora', 'Locomotora'), ('tren', 'Tren')], default='casilla', help_text='Escoja una opción.', max_length=30, verbose_name='Tipo de equipo')),
                ('tipo_carga', models.CharField(choices=[('combustible', 'Combustible'), ('aceite', 'Aceite'), ('miel', 'Miel'), ('alcohol', 'Alcohol'), ('quimicos', 'Químicos'), ('contenedores', 'Contenedores'), ('otros', 'Otros')], default='Combustible', help_text='Escoja una opción.', max_length=15, verbose_name='Tipo de carga')),
                ('tipo_combustible', models.CharField(blank=True, choices=[('-', '-'), ('combust_blanco', 'Combustible blanco'), ('combustible_negro', 'Combustible negro'), ('combustible_turbo', 'Combustible turbo')], default='-', help_text='Escoja una opción.', max_length=20, null=True, verbose_name='Tipo de combustible')),
                ('longitud', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Longitud (ft)')),
                ('peso_neto_sin_carga', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Peso neto sin carga (t)')),
                ('peso_maximo_con_carga', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Peso máximo con carga (t)')),
                ('capacidad_cubica_maxima', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Capacidad cúbica máxima (ft3)')),
                ('descripcion', models.CharField(max_length=60, verbose_name='Descripción')),
            ],
            options={
                'verbose_name': 'Tipo de equipo ferroviario',
                'verbose_name_plural': 'Tipos de equipos ferroviarios',
                'unique_together': {('tipo_equipo', 'tipo_carga', 'longitud', 'peso_neto_sin_carga', 'descripcion')},
            },
        ),
        migrations.CreateModel(
            name='nom_estructura_ubicacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_estructura_ubicacion', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator('^[A-Z][\\w\\d\\W]{2,99}$', 'Este campo comienza con mayúscula, acepta letras, números y caracteres especiales. Tamaño mínimo 3 caracteres y tamaño máximo 100 caracteres.')], verbose_name='Nombre')),
                ('capacidad', models.DecimalField(decimal_places=2, max_digits=10)),
                ('estructura_padre', models.ForeignKey(blank=True, help_text='Escoja una opción.', null=True, on_delete=django.db.models.deletion.CASCADE, to='nomencladores.nom_estructura_ubicacion', verbose_name='Estructura padre')),
                ('terminal', models.ForeignKey(help_text='Escoja una opción.', on_delete=django.db.models.deletion.CASCADE, to='nomencladores.nom_terminal', verbose_name='Terminal')),
                ('tipo_estructura', models.ForeignKey(help_text='Escoja una opción.', on_delete=django.db.models.deletion.CASCADE, to='nomencladores.nom_tipo_estructura_ubicacion', verbose_name='Tipo de estructura')),
            ],
            options={
                'verbose_name': 'Estructura de Ubicación',
                'verbose_name_plural': 'Estructuras de Ubicación',
            },
        ),
        migrations.CreateModel(
            name='nom_tipo_maniobra_portuaria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_maniobra', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[A-Z][\\w\\s]{1,99}$', 'Este campo comienza con mayúscula seguido de espacio, caracteres alfabéticos y no puede exceder los 100 caracteres.')], verbose_name='Nombre de la maniobra')),
                ('tipo_maniobra', models.CharField(choices=[('entrada', 'Maniobra de entrada'), ('salida', 'Maniobra de salida')], default='entrada', max_length=7, verbose_name='Tipo de maniobra')),
            ],
            options={
                'verbose_name': 'Tipo de maniobra portuaria',
                'verbose_name_plural': 'Tipos de maniobras portuarias',
                'unique_together': {('nombre_maniobra', 'tipo_maniobra')},
            },
        ),
        migrations.CreateModel(
            name='nom_destino',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('destino', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^[A-Z]{1}[\\d\\w\\W ]{2,99}$', 'Este campo comienza con mayúscula seguido de espacio, letras, números y caracteres especiales. Tamaño mínimo 2 caracteres y tamaño máximo 100 caracteres.')])),
                ('cliente', models.ForeignKey(help_text='Escoja una opción.', on_delete=django.db.models.deletion.CASCADE, to='nomencladores.nom_entidades')),
            ],
            options={
                'verbose_name': 'Destino',
                'verbose_name_plural': 'Destinos',
                'unique_together': {('cliente', 'destino')},
            },
        ),
        migrations.CreateModel(
            name='nom_atraque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_atraque', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator('^[A-Z][A-Za-z ]{2,99}$', 'Este campo comienza con mayúscula seguido de espacio, caracteres alfabéticos y no puede exceder los 100 caracteres.')], verbose_name='Nombre')),
                ('puerto', models.ForeignKey(help_text='Escoja una opción.', on_delete=django.db.models.deletion.CASCADE, to='nomencladores.nom_puerto')),
                ('terminal', models.ForeignKey(help_text='Escoja una opción.', on_delete=django.db.models.deletion.CASCADE, to='nomencladores.nom_terminal')),
            ],
            options={
                'verbose_name': 'Atraque',
                'verbose_name_plural': 'Atraques',
                'unique_together': {('nombre_atraque', 'puerto', 'terminal')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='nom_puerto',
            unique_together={('nombre_puerto', 'pais')},
        ),
        migrations.CreateModel(
            name='nom_equipo_ferroviario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_identificacion', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[\\d\\w\\W\\s]{3,10}$', 'Este campo acepta letras, números y caracteres especiales. Tamaño mínimo 3 caracteres y tamaño máximo 10 caracteres.')], verbose_name='Número de identificación')),
                ('territorio', models.CharField(choices=[('-', '-'), ('oriente', 'Oriente'), ('centro', 'Centro'), ('occidente', 'Occidente')], default='-', max_length=10, verbose_name='Territorio')),
                ('tipo_carga', models.CharField(max_length=28, verbose_name='Tipo de carga')),
                ('tipo_combustible', models.CharField(blank=True, default='-', max_length=20, null=True, verbose_name='Tipo de combustible')),
                ('peso_maximo', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Peso máximo (t)')),
                ('tipo_equipo', models.ForeignKey(help_text='Escoja el tipo de equipo ferroviario.', on_delete=django.db.models.deletion.CASCADE, to='nomencladores.nom_tipo_equipo_ferroviario')),
            ],
            options={
                'verbose_name': 'Equipo ferroviario',
                'verbose_name_plural': 'Equipos ferroviarios',
                'unique_together': {('tipo_equipo', 'numero_identificacion', 'territorio')},
            },
        ),
    ]
